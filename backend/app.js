const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");
const PDFDocument = require("pdfkit");
const fs = require("fs");
const path = require("path");

const app = express();
app.use(bodyParser.json());
app.use(cors());

let userSession = {};  
 
app.use((req, res, next) => {
  if (req.method === "POST" && req.path === "/reset-session") {
    userSession = {};  
    return res.json({ message: "Session reset successfully." });
  }
  next();
});

 
app.use("/resumes", express.static(path.join(__dirname, "resumes")));
 
function generateResume(userData) {
  const doc = new PDFDocument();
  const fileName = `${userData.name.replace(/\s+/g, "_")}_resume.pdf`;
  const filePath = path.join(__dirname, "resumes", fileName);

 
  if (!fs.existsSync(path.join(__dirname, "resumes"))) {
    fs.mkdirSync(path.join(__dirname, "resumes"));
  }

  
  doc.pipe(fs.createWriteStream(filePath));

  doc.fontSize(18).text("Resume", { align: "center" });
  doc.moveDown();
  doc.fontSize(12).text(`Name: ${userData.name}`);
  doc.text(`Education: ${userData.education}`);
  doc.text(`Purpose: ${userData.purpose}`);
  doc.text(`Courses: ${userData.selectedCourses.join(", ")}`);
  doc.text(`\n\nGenerated by our smart resume assistant.`);

  doc.end();

  return fileName; 
}

app.post("/chat", (req, res) => {
  const userMessage = req.body.message;

  if (!userSession.step) userSession.step = 1;  

  let botResponse = "";

  switch (userSession.step) {
    case 1:  
      botResponse = "Hello! What's your name?";
      userSession.step = 2;
      break;

    case 2:  
      userSession.name = userMessage;
      botResponse = "Fill basic information about you like address, email, education info, etc.";
      userSession.step = 3;
      break;

    case 3:  
      botResponse = "What are you studying?";
      userSession.step = 4;
      break;

    case 4:  
      userSession.education = userMessage;
      botResponse = "What is the purpose of your resume? Options: Software Developer, Higher Studies, PhD, Entrepreneur.";
      userSession.step = 5;
      break;

    case 5:  
      userSession.purpose = userMessage.toLowerCase();
      if (userSession.purpose.includes("software developer")) {
        userSession.recommendedCourses = ["A", "B", "C"];
        botResponse = `Here are some recommended courses for a Software Developer role:\n${userSession.recommendedCourses.join(", ")}`;
      } else if (userSession.purpose.includes("higher studies")) {
        userSession.recommendedCourses = ["D", "E", "F"];
        botResponse = `Here are some recommended courses for Higher Studies:\n${userSession.recommendedCourses.join(", ")}`;
      } else if (userSession.purpose.includes("phd")) {
        userSession.recommendedCourses = ["G", "H", "I"];
        botResponse = `Here are some recommended courses for PhD:\n${userSession.recommendedCourses.join(", ")}`;
      } else if (userSession.purpose.includes("entrepreneur")) {
        userSession.recommendedCourses = ["J", "K", "L"];
        botResponse = `Here are some recommended courses for Entrepreneurship:\n${userSession.recommendedCourses.join(", ")}`;
      } else {
        botResponse = "I didn't understand your choice. Please select from Software Developer, Higher Studies, PhD, or Entrepreneur.";
        userSession.step = 5;  
        break;
      }
      userSession.step = 6;
      break;

    case 6:  
      userSession.selectedCourses = userMessage.split(",").map((course) => course.trim());
      botResponse = `Here's how these courses enhance your resume:\n- Adds 15% more technical skills.\n- Increases employability by 20%.\n- Improves chances of getting interviews with top companies. Would you like to see how your updated resume looks?`;
      userSession.step = 7;
      break;

    case 7: 
    if ( userMessage.toLowerCase().includes("ok") || userMessage.toLowerCase().includes("yes") || userMessage.toLowerCase().includes("sure")) {
        botResponse = `Here is your updated resume preview:\n\nName: ${userSession.name}\nEducation: ${userSession.education}\nPurpose: ${userSession.purpose}\nCourses: ${userSession.selectedCourses.join(", ")}\n\nWould you like to download it as a PDF?`;
        userSession.step = 8;
      } else {
        botResponse = "Okay, let me know if you need anything else!";
        userSession.step = 1; 
      }
      
      break;

      case 8:  
      if (userMessage.toLowerCase().includes("ok") || userMessage.toLowerCase().includes("yes") || userMessage.toLowerCase().includes("sure")) {
        const fileName = generateResume(userSession);
        const resumeLink = `http://localhost:5000/resumes/${fileName}`;
        botResponse =  `Download link for your resume: <a href="${resumeLink}" target="_blank" class="text-blue-400 underline">Download Resume</a>`;
      } else {
        botResponse = "No problem! Let me know if you need any help.";
      }
      userSession.step = 1;  
      break;
    

    default:
      botResponse = "Sorry, I got confused. Let's start again.";
      userSession.step = 1;
  }

  res.json({ reply: botResponse, name: userSession.name });
});

 
app.listen(5000, () => {
  console.log("Backend running on http://localhost:5000");
});
